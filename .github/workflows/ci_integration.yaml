on:
  push:
    branches:
      - master
  pull_request:

name: C.I. Integration

jobs:
  release_assets:
    name: Check ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {
              os: ubuntu-latest,
              cross: false,
              toolchain: stable,
              target: x86_64-unknown-linux-gnu,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: aarch64-unknown-linux-gnu,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: arm-unknown-linux-gnueabi,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: armv7-unknown-linux-gnueabihf,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: mips64el-unknown-linux-gnuabi64,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: powerpc64le-unknown-linux-gnu,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: x86_64-unknown-linux-musl,
            }
          # Android
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: aarch64-linux-android,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: arm-linux-androideabi,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: armv7-linux-androideabi,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: i686-linux-android,
            }
          - {
              os: ubuntu-latest,
              cross: true,
              toolchain: stable,
              target: x86_64-linux-android,
            }
          # tumbv7neon not yet supported
          # - { os: ubuntu-latest, cross: true, toolchain: stable, target: thumbv7neon-linux-androideabi }
          # Macos
          - {
              os: macos-latest,
              cross: false,
              toolchain: stable,
              target: x86_64-apple-darwin,
            }
          # iOS
          - {
              os: macos-latest,
              cross: false,
              toolchain: stable,
              target: aarch64-apple-ios,
            }
          - {
              os: macos-latest,
              cross: false,
              toolchain: stable,
              target: x86_64-apple-ios,
            }
          # Windows
          - {
              os: windows-latest,
              cross: false,
              toolchain: stable-x86_64-pc-windows-gnu,
              target: x86_64-pc-windows-gnu,
            }
          - {
              os: windows-latest,
              cross: false,
              toolchain: stable-x86_64-pc-windows-msvc,
              target: x86_64-pc-windows-msvc,
            }

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build library (release)
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.config.cross }}
          command: rustc
          args: --release --target ${{ matrix.config.target }} -p jormungandrwallet -- -C lto

  build_cordova_ios_app:
    name: Build cordova test app on ios
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true

      - run: rustup target add x86_64-apple-ios
      - run: rustup target add aarch64-apple-ios

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Setup cordova
        run: sudo npm install -g cordova

      - run: brew install ios-deploy

      - name: build test app
        run: |
          python3 bindings/wallet-cordova/tests/setup.py \
            --directory test_app \
            --platform ios \
            -- setup

  build_cordova_android_app:
    name: Build cordova test app on android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup cordova
        run: sudo npm install -g cordova

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: rustc
          args: --target aarch64-linux-android -p wallet-jni -- -C link-args=-ldl

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: rustc
          args: --target armv7-linux-androideabi -p wallet-jni -- -C link-args=-ldl

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: rustc
          args: --target i686-linux-android -p wallet-jni -- -C link-args=-ldl

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: rustc
          args: --target x86_64-linux-android -p wallet-jni -- -C link-args=-ldl

      - name: build test app
        run: |
          python3 bindings/wallet-cordova/tests/setup.py \
            --directory test_app \
            --platform android \
            --no-cargo-build \
            -- setup
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - uses: actions/upload-artifact@v2
        with:
          name: android-plugin
          path: ./test_app/hello/platforms/android/app/build/outputs/apk/debug/app-debug.apk
