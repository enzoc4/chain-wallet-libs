on:
  push:
    branches:
      - master
  pull_request:

name: C.I. Checks

jobs:
  #check:
  #  name: Check
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout sources
  #      uses: actions/checkout@v1
  #      with:
  #        submodules: true

  #    - name: Install stable toolchain
  #      uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true

  #    - name: Run cargo check
  #      uses: actions-rs/cargo@v1
  #      with:
  #        command: check

  #test:
  #  name: Test Suite
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout sources
  #      uses: actions/checkout@v1
  #      with:
  #        submodules: true

  #    - name: Install stable toolchain
  #      uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true

  #    - name: Run cargo test
  #      uses: actions-rs/cargo@v1
  #      continue-on-error: false
  #      with:
  #        command: test

  #lints:
  #  name: Lints
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout sources
  #      uses: actions/checkout@v1
  #      with:
  #        submodules: true

  #    - name: Install stable toolchain
  #      uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true
  #        components: rustfmt, clippy

  #    - name: Run cargo fmt
  #      uses: actions-rs/cargo@v1
  #      continue-on-error: false
  #      with:
  #        command: fmt
  #        args: --all -- --check

  #    - name: Run cargo clippy
  #      uses: actions-rs/cargo@v1
  #      continue-on-error: true # WARNING: only for this example, remove it!
  #      with:
  #        command: clippy
  #        args: -- -D warnings

  # test-wasm:
  #   name: Wasm-pack test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: true

  #     - name: Install wasm pack
  #       run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

  #     - name: Test in chrome
  #       run: wasm-pack test --headless --chrome ./bindings/wallet-js

  #     - name: Test in firefox
  #       run: wasm-pack test --headless --firefox ./bindings/wallet-js

  eslint-cordova-plugin:
    name: check eslint for cordova plugin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: install dependencies
        working-directory: ./bindings/wallet-cordova
        run: npm install

      - name: eslint
        working-directory: ./bindings/wallet-cordova
        run: npm run eslint

  check-c-header:
    name: check c-header is up-to-date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install cbindgen
        run: cargo install cbindgen --force

      - name: run check script
        run: bash bindings/wallet-c/check_header.sh

  jni-java-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8]
        architecture: [x86, x64]
    name: Test jni
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: ls ./bindings/wallet-jni/java/com/iohk/jormungandrwallet

      - name: run java jni tests
        working-directory: ./bindings/wallet-jni/java
        run: ./run_test.py
