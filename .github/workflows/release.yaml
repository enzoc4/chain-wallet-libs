on:
  push:
    tags:
      - 'v[0-9]+.*' # push events to matching releases

name: Release

jobs:
  initial_release:
    name: Create base release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_wasm:
    name: Release wasm assets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [nodejs, web]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install wasm pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: build
        run: wasm-pack build --release --target ${{ matrix.target }} wallet-js

      - name: pack
        run: wasm-pack pack ./wallet-js

      - name: rename-tarball
        run: find ./wallet-js/pkg -name wallet-js*.tgz -exec mv {} chain-wallet-libs-${{ steps.get_version.outputs.VERSION }}.tgz \;

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: chain-wallet-libs-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.*
          asset_name: chain-wallet-libs-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
