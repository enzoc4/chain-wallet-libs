on:
  push:
    tags:
      - 'v[0-9]+.*' # push events to matching releases

name: Release

jobs:
  initial_release:
    name: Create base release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_wasm:
    name: Release wasm assets
    needs: initial_release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [nodejs, web, bundler]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install wasm pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: build
        run: |
          wasm-pack build \
            --scope iohk-jormungandr \
            --out-name wallet \
            --release --target ${{ matrix.target }} \
            bindings/wallet-js

      # https://github.com/rustwasm/wasm-pack/issues/837
      - name: patch package.json missing file
        working-directory: ./bindings/wallet-js
        run: sh patch-packaging.sh 

      - name: pack
        run: wasm-pack pack bindings/wallet-js

      - name: Get tag version
        id: get_version
        run: echo ::set-output name=VERSION::``${GITHUB_REF#refs/tags/}``
        shell: bash

      - name: rename-tarball
        run: find ./bindings/wallet-js/pkg -name iohk-jormungandr-wallet-js*.tgz -exec mv {} chain-wallet-libs-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tgz \;

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: chain-wallet-libs-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.*
          asset_name: chain-wallet-libs-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true

  release_keygen:
    name: Release catalyst keygen/pincode wasm assets
    needs: initial_release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [bundler]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install wasm pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: build
        run: |
          wasm-pack build \
            --scope iohk-jormungandr \
            --out-name keygen \
            --release --target ${{ matrix.target }} \
           keygen

      # https://github.com/rustwasm/wasm-pack/issues/837
      - name: patch package.json missing file
        working-directory: ./keygen
        run: sh patch-packaging.sh 

      - name: pack
        run: wasm-pack pack keygen

      - name: Get tag version
        id: get_version
        run: echo ::set-output name=VERSION::``${GITHUB_REF#refs/tags/}``
        shell: bash

      - name: rename-tarball
        run: find ./keygen/pkg -name iohk-jormungandr-keygen*.tgz -exec mv {} iohk-jormungandr-keygen-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tgz \;

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: iohk-jormungandr-keygen-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.*
          asset_name: iohk-jormungandr-keygen-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true